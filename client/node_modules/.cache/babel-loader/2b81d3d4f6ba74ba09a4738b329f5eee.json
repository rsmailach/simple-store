{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\Documents\\\\NodeProjects\\\\simple-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\Documents\\\\NodeProjects\\\\simple-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\Documents\\\\NodeProjects\\\\simple-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\Documents\\\\NodeProjects\\\\simple-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\Documents\\\\NodeProjects\\\\simple-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\Documents\\\\NodeProjects\\\\simple-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\Documents\\\\NodeProjects\\\\simple-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\Documents\\\\NodeProjects\\\\simple-store\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n/*import renderHTML from 'react-render-html';*/\n\nimport './App.css';\n\nvar ItemsTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ItemsTable, _React$Component);\n\n  function ItemsTable() {\n    _classCallCheck(this, ItemsTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ItemsTable).apply(this, arguments));\n  }\n\n  _createClass(ItemsTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tr\", {\n        id: this.props.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, this.props.price), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"delete-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"X\")));\n    }\n  }]);\n\n  return ItemsTable;\n}(React.Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      indexResponse: '',\n      name: '',\n      price: '',\n      responseToPost: ''\n    };\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var index_response, json, html, arr;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/index');\n\n            case 2:\n              index_response = _context.sent;\n              _context.next = 5;\n              return index_response.json();\n\n            case 5:\n              json = _context.sent;\n              html = '';\n\n              if (!(index_response.status !== 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              throw Error(json.message);\n\n            case 9:\n              arr = [];\n              Object.keys(json).forEach(function (key) {\n                arr.push(json[key]);\n              });\n              return _context.abrupt(\"return\", React.createElement(\"table\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 37\n                },\n                __self: this\n              }, React.createElement(\"tr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 37\n                },\n                __self: this\n              }, React.createElement(\"th\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 37\n                },\n                __self: this\n              }, \"Name\"), React.createElement(\"th\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 37\n                },\n                __self: this\n              }, \"Price\")), arr.map(function (item) {\n                return React.createElement(ItemsTable, {\n                  key: item.Item_ID,\n                  name: item.Name,\n                  price: item.Price,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 37\n                  },\n                  __self: this\n                });\n              })));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var post_response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _context2.next = 3;\n                return fetch('/api/add-item', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    name: _this.state.name,\n                    price: _this.state.price\n                  })\n                });\n\n              case 3:\n                post_response = _context2.sent;\n                _context2.next = 6;\n                return post_response.text();\n\n              case 6:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.callApi().then(function (res) {\n        return ReactDOM.render(res, document.getElementById('items-list'));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"My Sample Store\")), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Add new inventory:\")), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Name\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Price\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"price\",\n        value: this.state.price,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            price: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"p\", {\n        id: \"post-response\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.responseToPost), React.createElement(\"div\", {\n        id: \"items-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["d:\\Documents\\NodeProjects\\simple-store\\client\\src\\App.js"],"names":["React","Component","ReactDOM","ItemsTable","props","key","name","price","App","state","indexResponse","responseToPost","callApi","fetch","index_response","json","html","status","Error","message","arr","Object","keys","forEach","push","map","item","Item_ID","Name","Price","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","post_response","text","setState","then","res","render","document","getElementById","catch","err","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n/*import renderHTML from 'react-render-html';*/\nimport './App.css';\n\nclass ItemsTable extends React.Component {\n  render() {\n    return <tr id={this.props.key}><td>{this.props.name}</td><td>{this.props.price}</td><td><button id=\"delete-item\">X</button></td></tr>;\n  }\n}\n\nclass App extends Component {\n  state = {\n    indexResponse: '',\n    name: '',\n    price: '',\n    responseToPost: '',\n  };\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => ReactDOM.render(res, document.getElementById('items-list')))\n      .catch(err => console.log(err));\n      \n  }\n\n  callApi = async () => {\n    const index_response = await fetch('/api/index');\n    const json = await index_response.json();\n    var html = '';\n    if (index_response.status !== 200) throw Error(json.message);\n\n    var arr = [];\n    Object.keys(json).forEach(function(key) {\n      arr.push(json[key]);\n    });\n    return <table><tr><th>Name</th><th>Price</th></tr>{arr.map(item => <ItemsTable key={item.Item_ID} name={item.Name} price={item.Price} />)}</table>;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const post_response = await fetch('/api/add-item', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name: this.state.name, price: this.state.price }),\n    });\n    const body = await post_response.text();\n    this.setState({ responseToPost: body });\n  };\n\nrender() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            My Sample Store\n          </p>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Add new inventory:</strong>\n          </p>\n          <label>Name\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={this.state.name}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n          </label>\n          <label>Price\n          <input\n            type=\"text\"\n            id=\"price\"\n            value={this.state.price}\n            onChange={e => this.setState({ price: e.target.value })}\n          />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p id=\"post-response\">{this.state.responseToPost}</p>\n        <div id=\"items-list\"></div>\n      </div>\n    );\n  }\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}